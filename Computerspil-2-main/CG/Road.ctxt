#BlueJ class context
comment0.target=Road
comment0.text=\n\ This\ class\ represents\ a\ road\ between\ two\ cities.\ The\ road\ has\ a\ length\ and\ two\ cities,\ from\ and\ to.\n\ @author\ Simon\ Hesselberg\ &\ Noah\ \u00D8stfeldt\n\ @version\ 09-11-2024\n
comment1.params=from\ to\ length
comment1.target=Road(City,\ City,\ int)
comment1.text=\n\ Constructor\ for\ the\ Road\ class.\n\ @param\ from\ -\ the\ city\ the\ road\ goes\ from\n\ @param\ to\ -\ the\ city\ the\ road\ goes\ to\n\ @param\ length\ -\ the\ length\ of\ the\ road\n
comment2.params=
comment2.target=City\ getFrom()
comment2.text=\n\ Returns\ the\ city\ the\ road\ goes\ from.\n\ @return\ from\n
comment3.params=
comment3.target=City\ getTo()
comment3.text=\n\ Returns\ the\ city\ the\ road\ goes\ to.\n\ @return\ to\n
comment4.params=
comment4.target=int\ getLength()
comment4.text=\n\ Returns\ the\ length\ of\ the\ road.\n\ @return\ length\n
comment5.params=
comment5.target=java.lang.String\ toString()
comment5.text=\n\ Overrides\ the\ toString\ method\ to\ return\ a\ string\ representation\ of\ the\ Road\ object.\n\ @return\ string\ representation\ of\ the\ Road\ object.\n
comment6.params=other
comment6.target=int\ compareTo(Road)
comment6.text=\n\ Overrides\ the\ compareTo\ method\ to\ compare\ two\ Road\ objects.\ The\ comparison\ is\ done\ by\ comparing\ the\ from\ city,\ then\ the\ to\ city\ and\ finally\ the\ length\ of\ the\ road.\n\ @param\ other\ the\ object\ to\ be\ compared.\n\ @return\ negative,\ zero\ or\ positive\ integer\ depending\ on\ the\ comparison.\n
comment7.params=otherObject
comment7.target=boolean\ equals(java.lang.Object)
comment7.text=\n\ Overrides\ the\ equals\ method\ to\ compare\ two\ Road\ objects.\ Two\ Road\ objects\ are\ equal\ if\ their\ from\ and\ to\ cities\ are\ equal\ and\ their\ lengths\ are\ equal.\n\ @param\ otherObject\ the\ object\ to\ be\ compared.\n\ @return\ true\ if\ the\ two\ Road\ objects\ are\ equal,\ false\ otherwise.\n
comment8.params=
comment8.target=int\ hashCode()
comment8.text=\n\ Overrides\ the\ hashCode\ method\ to\ return\ a\ unique\ hash\ code\ for\ each\ Road\ object.\n\ @return\ hash\ code\ for\ this\ Road\ object.\n
numComments=9
